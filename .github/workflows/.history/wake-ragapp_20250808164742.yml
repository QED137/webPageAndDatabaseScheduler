name: Wake Neo4j + Start and Stop Kamatera VPS

on:
  schedule:
    - cron: '0 6 * * *'   # 🕗 08:00 CET — Start Neo4j + VPS
    - cron: '0 18 * * *'  # 🕗 20:00 CET — Stop VPS
  workflow_dispatch:     # Manual trigger option

jobs:
  manage_rag_app:
    runs-on: ubuntu-latest
    env:
      NEO4J_URI: ${{ secrets.NEO4J_URI }}
      NEO4J_USER: ${{ secrets.NEO4J_USER }}
      NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
      KAMATERA_API_KEY: ${{ secrets.KAMATERA_API_KEY }}
      KAMATERA_SERVER_ID: ${{ secrets.KAMATERA_SERVER_ID }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Determine Task Based on Time
        id: task
        run: |
          hour=$(date -u +"%H")
          echo "🕒 Current UTC Hour: $hour"
          if [ "$hour" -eq 6 ]; then
            echo "task=start" >> $GITHUB_OUTPUT
          elif [ "$hour" -eq 18 ]; then
            echo "task=stop" >> $GITHUB_OUTPUT
          else
            echo "task=skip" >> $GITHUB_OUTPUT
          fi

      - name: Wake up Neo4j AuraDB (Only on Start)
        if: steps.task.outputs.task == 'start'
        run: |
          pip install neo4j
          python3 <<EOF
          from neo4j import GraphDatabase
          #uri = "${{ env.NEO4J_URI }}"
          uri = base64.b64decode(os.environ["NEO4J_URI_B64"]).decode()
          user = "${{ env.NEO4J_USER }}"
          password = "${{ env.NEO4J_PASSWORD }}"

          print("🌐 Connecting to Neo4j AuraDB...")
          driver = GraphDatabase.driver(uri, auth=(user, password))
          with driver.session() as session:
              result = session.run("MATCH (n) RETURN count(n)")
              print("✅ Neo4j responded with:", result.single())
          driver.close()
          print("🧠 AuraDB is now awake.")
          EOF

      - name: Wait 30 seconds before starting VPS
        if: steps.task.outputs.task == 'start'
        run: sleep 30

      - name: Start Kamatera VPS
        if: steps.task.outputs.task == 'start'
        run: |
          echo "🚀 Starting VPS..."
          curl -X POST https://console.kamatera.com/service/server/start \
            -H "X-API-Token: ${{ env.KAMATERA_API_KEY }}" \
            -d "serverId=${{ env.KAMATERA_SERVER_ID }}"

      - name: Stop Kamatera VPS
        if: steps.task.outputs.task == 'stop'
        run: |
          echo "⏹️ Stopping VPS..."
          curl -X POST https://console.kamatera.com/service/server/stop \
            -H "X-API-Token: ${{ env.KAMATERA_API_KEY }}" \
            -d "serverId=${{ env.KAMATERA_SERVER_ID }}"
